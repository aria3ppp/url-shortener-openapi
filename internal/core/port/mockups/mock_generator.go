// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aria3ppp/url-shortener-openapi/internal/core/port (interfaces: RandomStringGenerator)

// Package mockups is a generated GoMock package.
package mockups

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRandomStringGenerator is a mock of RandomStringGenerator interface.
type MockRandomStringGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockRandomStringGeneratorMockRecorder
}

// MockRandomStringGeneratorMockRecorder is the mock recorder for MockRandomStringGenerator.
type MockRandomStringGeneratorMockRecorder struct {
	mock *MockRandomStringGenerator
}

// NewMockRandomStringGenerator creates a new mock instance.
func NewMockRandomStringGenerator(ctrl *gomock.Controller) *MockRandomStringGenerator {
	mock := &MockRandomStringGenerator{ctrl: ctrl}
	mock.recorder = &MockRandomStringGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRandomStringGenerator) EXPECT() *MockRandomStringGeneratorMockRecorder {
	return m.recorder
}

// RandomString mocks base method.
func (m *MockRandomStringGenerator) RandomString() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RandomString")
	ret0, _ := ret[0].(string)
	return ret0
}

// RandomString indicates an expected call of RandomString.
func (mr *MockRandomStringGeneratorMockRecorder) RandomString() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RandomString", reflect.TypeOf((*MockRandomStringGenerator)(nil).RandomString))
}
